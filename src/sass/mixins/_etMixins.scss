/* CUSTOM MIXINS */
@mixin background($start, $end, $percentTop: 0%, $percentBottom: 100%, $filter: true) {
  background: -moz-linear-gradient(top, $start $percentTop, $end $percentBottom);
  background: -webkit-gradient(linear, left top, left bottom, color-stop($percentTop, $start), color-stop($percentBottom, $end));
  background: -webkit-linear-gradient(top, $start $percentTop, $end $percentBottom);
  background: -o-linear-gradient(top, $start $percentTop, $end $percentBottom);
  background: -ms-linear-gradient(top, $start $percentTop, $end $percentBottom);
  background: linear-gradient(to bottom, $start $percentTop, $end $percentBottom);

  @if $filter == true {
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($end)}',GradientType=0 );

    /* IE6-9 */
  }

  background-repeat: no-repeat;
}

@mixin border-radius($px) {
  -webkit-border-radius: $px;
  -moz-border-radius: $px;
  border-radius: $px;
}

@mixin border-top-left-radius($px) {
  -webkit-border-top-left-radius: $px;
  -moz-border-radius-topleft: $px;
  border-top-left-radius: $px;
}

@mixin border-bottom-left-radius($px) {
  -webkit-border-bottom-left-radius: $px;
  -moz-border-radius-bottomleft: $px;
  border-bottom-left-radius: $px;
}

@mixin border-top-right-radius($px) {
  -webkit-border-top-right-radius: $px;
  -moz-border-radius-topright: $px;
  border-top-right-radius: $px;
}

@mixin border-bottom-right-radius($px) {
  -webkit-border-bottom-right-radius: $px;
  -moz-border-radius-bottomright: $px;
  border-bottom-right-radius: $px;
}

//font and line short cuts
@function no-unit($number) {
  @return $number / ($number * 0 + 1);
}

//to add in IE8 resizing text support
$browser-context: 14;

@function em($pixels, $context: $browser-context) {
  @return #{$pixels / $context}em;
}

@mixin font-size-REM($sizeValue: 1.6) {
  font-size: no-unit($sizeValue) + px;
  font-size: em(no-unit($sizeValue));
  font-size: no-unit($sizeValue / 10) + rem;
}

%clearfix {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}
@mixin faux-block{
    @extend .clearfix;
    display: block;
}

//Mixin to use rems with pixel fall back on any property. 
// use pixel values in SASS files
/* example usages
p{
    @include rem(font-size, 16px);
}

p{
    font-size: 16px;
    font-size: 1.6rem;
}

------

p{
    @include rem(margin, 16px);
}

p{
    margin: 16px;
    margin: 1.6rem;
}

------
p{
    @include rem(margin, 16px 4px 5px 6px);
}

p{
    margin: 16px 4px 5px 6px;
    margin: 1.6rem .4rem .5rem .6rem;
}


------
end of examples*/

@function parseInt($n) {
  /* [2] */
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px: ();

  /* [3] */
  $rem: ();

  /* [3] */

  @each $value in $values {
    /* [4] */

    @if $value == 0 or $value == auto {
      /* [5] */
      $px: append($px, $value);
      $rem: append($rem, $value);
    }
    @else {
      $unit: unit($value);

      /* [6] */
      $val: parseInt($value);

      /* [6] */

      @if $unit == "px" {
        /* [7] */
        $px: append($px, $value);
        $rem: append($rem, $val / 10 * 1rem);
      }

      @if $unit == "rem" {
        /* [7] */
        $px: append($px, $val * 10 * 1px);
        $rem: append($rem, $value);
      }
    }
  }

  #{$property}: $px;

  /* [8] */
  #{$property}: $rem;

  /* [8] */
}




@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
/* END CUSTOM MIXINS */



%row{
    @extend .row;
    @include rem(margin-left, -15px);
    @include rem(margin-right, -15px);
}